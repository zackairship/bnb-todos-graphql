"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  errors: [String!]!
  jwt: String
}

"""
Autogenerated return type of CreateUserSession
"""
type CreateUserSessionPayload {
  errors: [String!]!
  jwt: String
}

"""
Represents untyped JSON
"""
scalar JSON

type Mutation {
  createUser(user: UserInput!): CreateUserPayload
  createUserSession(email: String!, password: String!): CreateUserSessionPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  todos(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    filters: JSON

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TodoConnection
}

type Todo {
  description: String!
  id: ID!
  status: String!
  title: String!
}

"""
The connection type for Todo.
"""
type TodoConnection {
  """
  A list of edges.
  """
  edges: [TodoEdge]

  """
  A list of nodes.
  """
  nodes: [Todo]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type TodoEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Todo
}

input UserInput {
  email: String
  firstName: String
  id: ID
  lastName: String
  password: String
}